<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:FoodRecipes.Converter"
                    xmlns:local="clr-namespace:FoodRecipes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ValidationErrorTemplate.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />

        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <!-- Primary color -->
    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="#172975"/>
    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="#172975"/>
    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#172975"/>
    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="#8fa2e2"/>
    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="#172975"/>
    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="#8fa2e2"/>

    <!-- MaterialDesignFlatButton -->
    <Style x:Key="WindowOptionsButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource RippleBlue}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding Foreground,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.25}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DrawerButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource WindowOptionsButton}">
        <Setter Property="Width" Value="165"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MyBlue}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="White" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="19" />
    </Style>

    <Style x:Key="CardScaleHover" TargetType="{x:Type materialDesign:Card}" >
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Grid.ZIndex" Value="1"/>
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.008" ScaleY="1.008"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource MyBlack}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Hidden"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
    </Style>


    <Style x:Key="SearchBoxComboBoxItem" TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemSelectedCollapsedStyle}">
        <Setter Property="BorderBrush" Value="{DynamicResource RippleBlue}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding BorderBrush,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.25}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchBoxComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="FontFamily" Value="{DynamicResource GilroySemiBold}"/>
        <Setter Property="Foreground" Value="{DynamicResource MyBlack}"/>
        <Setter Property="materialDesign:ComboBoxAssist.ClassicMode" Value="True"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
    </Style>

    <Style x:Key="NonHoverListBoxItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                            Padding="8" 
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter Property="Grid.ZIndex" Value="1"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupButton" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowOptionsButton}">
        <Setter Property="Height" Value="42"/>
        <Setter Property="Width" Value="{Binding Content}"/>
        <Setter Property="Background" Value="{DynamicResource MyLightGray}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="21"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
    </Style>
</ResourceDictionary>